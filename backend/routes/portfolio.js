const express = require('express');
const router = express.Router();
const puppeteer = require('puppeteer');
const Activity = require('../models/Activity');
const User = require('../models/User');
const auth = require('../middleware/auth');
const path = require('path');
const fs = require('fs');

// Generate PDF Portfolio
router.post('/generate', auth, async (req, res) => {
  try {
    console.log('üé® Generating portfolio for:', req.user.userId);
    
    // Get user data
    const user = await User.findById(req.user.userId);
    const activities = await Activity.find({ 
      student: req.user.userId, 
      status: 'approved' 
    }).sort({ date: -1 });

    // Calculate statistics
    const totalCredits = activities.reduce((sum, act) => sum + (act.credits || 0), 0);
    const activityTypes = [...new Set(activities.map(act => act.type))];
    
    // Generate HTML for PDF
    const htmlContent = generatePortfolioHTML(user, activities, totalCredits, activityTypes);
    
    // Create PDF using Puppeteer
    const browser = await puppeteer.launch({ 
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    await page.setContent(htmlContent, { waitUntil: 'networkidle0' });
    
    const pdfBuffer = await page.pdf({
      format: 'A4',
      printBackground: true,
      margin: { top: '20mm', bottom: '20mm', left: '15mm', right: '15mm' }
    });
    
    await browser.close();
    
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', `attachment; filename="${user.name}-Portfolio.pdf"`);
    res.send(pdfBuffer);
    
  } catch (error) {
    console.error('‚ùå Portfolio generation error:', error);
    res.status(500).json({ message: 'Error generating portfolio' });
  }
});

// HTML Template for Portfolio
function generatePortfolioHTML(user, activities, totalCredits, activityTypes) {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>${user.name} - Academic Portfolio</title>
      <style>
        body { font-family: 'Arial', sans-serif; margin: 0; padding: 20px; color: #333; }
        .header { text-align: center; border-bottom: 3px solid #3B82F6; padding-bottom: 20px; margin-bottom: 30px; }
        .header h1 { color: #1F2937; margin-bottom: 5px; font-size: 28px; }
        .header p { color: #6B7280; font-size: 16px; }
        .section { margin-bottom: 30px; }
        .section h2 { color: #1F2937; border-left: 4px solid #3B82F6; padding-left: 15px; font-size: 20px; }
        .stats { display: flex; justify-content: space-around; margin: 20px 0; }
        .stat { text-align: center; padding: 15px; background: #F3F4F6; border-radius: 8px; }
        .stat h3 { margin: 0; color: #3B82F6; font-size: 24px; }
        .stat p { margin: 5px 0 0 0; color: #6B7280; font-size: 14px; }
        .activity { border: 1px solid #E5E7EB; border-radius: 8px; padding: 15px; margin-bottom: 15px; }
        .activity h3 { margin: 0 0 5px 0; color: #1F2937; }
        .activity .type { background: #3B82F6; color: white; padding: 3px 8px; border-radius: 4px; font-size: 12px; }
        .activity .credits { color: #059669; font-weight: bold; }
        .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #E5E7EB; }
      </style>
    </head>
    <body>
      <div class="header">
        <h1>${user.name}</h1>
        <p>${user.email} | ${user.studentId || user.facultyId} | ${user.department}</p>
        <p>Academic Portfolio - Generated on ${new Date().toLocaleDateString()}</p>
      </div>

      <div class="section">
        <h2>Portfolio Summary</h2>
        <div class="stats">
          <div class="stat">
            <h3>${activities.length}</h3>
            <p>Total Activities</p>
          </div>
          <div class="stat">
            <h3>${totalCredits}</h3>
            <p>Credits Earned</p>
          </div>
          <div class="stat">
            <h3>${activityTypes.length}</h3>
            <p>Activity Types</p>
          </div>
        </div>
      </div>

      <div class="section">
        <h2>Academic Activities</h2>
        ${activities.map(activity => `
          <div class="activity">
            <h3>${activity.title}</h3>
            <p><span class="type">${activity.type.toUpperCase()}</span> | ${new Date(activity.date).toLocaleDateString()}</p>
            <p>${activity.description}</p>
            ${activity.organizer ? `<p><strong>Organizer:</strong> ${activity.organizer}</p>` : ''}
            ${activity.duration ? `<p><strong>Duration:</strong> ${activity.duration}</p>` : ''}
            <p class="credits">Credits: ${activity.credits || 0}</p>
          </div>
        `).join('')}
      </div>

      <div class="footer">
        <p>This portfolio was generated by Smart Student Hub</p>
        <p>Verified academic activities as of ${new Date().toLocaleDateString()}</p>
      </div>
    </body>
    </html>
  `;
}

module.exports = router;
